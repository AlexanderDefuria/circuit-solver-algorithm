name: Cargo Build & Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v3
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --verbose
      - run: cargo test --verbose

  wasm:
    name: Rust project - wasm
    runs-on: ubuntu-latest
    needs:
      - build_and_test
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install Target
        run: rustup target add wasm32-unknown-unknown
      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          # Optional version of wasm-pack to install(eg. 'v0.9.1', 'latest')
          version: 'v0.9.1'
      - name: Test wasm
        run: wasm-pack test --node
      - name: Build wasm
        run: wasm-pack build --target web --release
      - name: Copy wasm to public
        uses: actions/upload-artifact@v2
        with:
          name: wasm
          path: ./pkg/
      - run: wasm-pack publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  print_doc_coverage:
    name: Print documentation coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - id: coverage
        uses: bewee/rustdoc-coverage-action@v1
      - run: echo ${{ steps.coverage.outputs.documented }}

  publish-wasm-package:
    runs-on: ubuntu-latest
    needs:
      - wasm
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@AlexanderDeFuria'
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}